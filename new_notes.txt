Option Explicit

Public CallCount As Integer

'you may define as static a variable, function or procedure
'variable:       Static myInt As Integer
'function:       static function myStaticFunc()
'procedure       private Static Sub myStaticSub()

' if you need a global static  variable, define it as Public


Sub f9handler()


Dim str_cell As String

ActiveCell.Calculate

Application.Wait (Now + TimeValue("0:00:1"))

str_cell = CStr(ActiveCell.Address) & " " & CStr(ActiveCell.Formula)

Debug.Print "Logging " & str_cell

save_stats (str_cell)

End Sub

â€˜   to call   =save_stats("")
Function save_stats(str_source As String)

Dim rng_stat1, rng_stat2, rng_stat3 As Range

Dim PathAndFile, str_region, str_user As String
Dim dbl_python_version As Double

Dim str_timestamp As String
Dim str_output As String

save_stats = "Error"


str_user = Application.UserName
str_region = "NA"
dbl_python_version = 3.78

PathAndFile = VBA.Environ("TEMP") & "\" & Application.UserName & CStr(dbl_python_version) & "_" & str_region & ".txt"

Debug.Print "Saving to " & PathAndFile


str_timestamp = Format(Now(), "h:n:s AM/PM")

Set rng_stat1 = Worksheets("TestMe").Range("F1")
Set rng_stat2 = Worksheets("TestMe").Range("F2")
Set rng_stat3 = Worksheets("TestMe").Range("F3")


' Close #1

str_output = str_timestamp & "," & "," & CStr(rng_stat1) & "," & CStr(rng_stat2) & "," & CStr(rng_stat3) & "," & CallCount & "," & str_source

Open PathAndFile For Append As 1    ' open for Output or Append or Input



Print #1, str_output

Close #1

save_stats = "Good Job"

End Function



' -- to call... =NumCalls(A1)

Function NumCalls(d As Variant) As Integer

' Static CallCount As Integer

Debug.Print "Call count is now " & CStr(CallCount)

CallCount = CallCount + 1
NumCalls = CallCount

End Function



