' this traps a change in the worksheet in which it is defined (dont define this in workbook or module)
Private Sub Worksheet_Change(ByVal Target As Range)
    Dim KeyCells As Range

    Set KeyCells = Range("A1:A1")

    If Not Application.Intersect(KeyCells, Range(Target.Address)) _
           Is Nothing Then
           
   
    
    For i = 1 To 100
    If IsEmpty(Sheet6.Cells(i, 4)) Then
        Sheet6.Cells(i, 4).Value = "A1 changed at " & Format(Now(), "h:n:s AM/PM")
        i = 100
    End If
    Next i


     
End If
End Sub






Sub TestFind()

Dim ws_count As Integer, I As Integer
Dim cur_sheet As Worksheet
Dim search_string As String

search_string = "88"



ws_count = ActiveWorkbook.Worksheets.Count

         ' Begin the loop.
For I = 1 To ws_count



Dim rg As Range, old_rg As Range, FindStr As String

Set cur_sheet = ActiveWorkbook.Worksheets(I)


Debug.Print "Processing " & cur_sheet.Name


'Look for first instance of "‘Light & Heat"
Set rg = Sheets(ActiveWorkbook.Worksheets(I).Name).UsedRange.Find(search_string)

'If not found then exit
If rg Is Nothing Then GoTo NextIteration

'Make a copy of the range object
Set old_rg = rg
FindStr = FindStr & "|" & rg.Address


    Do
          ' searches value and formula
        ' Set rg = Sheets(ActiveWorkbook.Worksheets(I).Name).UsedRange.Find(search_string, After:=Range(old_rg.Address))
            ' searches just formula
        ' Set rg = Sheets(ActiveWorkbook.Worksheets(I).Name).UsedRange.Find(search_string, After:=Range(old_rg.Address), LookIn:=xlFormulas)
                  ' searches just formula
        Set rg = Sheets(ActiveWorkbook.Worksheets(I).Name).UsedRange.Find(search_string, After:=Range(old_rg.Address), LookIn:=xlValues)
  
        '  Lookat:=xlPart)  to accept a partial match
        ' Lookat:=xlWhole)  for a exact match
        
        'If the address has already been found then exit the do loop – this stops continuous looping
        If InStr(FindStr, rg.Address) Then Exit Do
        
      
        Debug.Print cur_sheet.Name & " , " & rg.Address & " , " & rg.Value & " , " & rg.Formula
         
          
        'Add the latest address to the string of addresses
        FindStr = FindStr & "|" & rg.Address
    
        'make a copy of the current range
         Set old_rg = rg
    Loop

NextIteration:

Next I



End Sub





Sub removeSomeFormulas()

Dim ws_count As Integer, I As Integer
Dim cur_sheet As Worksheet

ws_count = ActiveWorkbook.Worksheets.Count

         ' Begin the loop.
For I = 1 To ws_count

Set cur_sheet = ActiveWorkbook.Worksheets(I)
Debug.Print "Processing " & cur_sheet.Name



For Each c In cur_sheet.Range("J1:K5").Cells
    If (c.Value <> c.Formula) Then
        Debug.Print c.Address & " "; c.Value & " "; c.Formula
        c.Formula = c.Value
    End If
Next c

Next I
    


End Sub



Sub getLastRowAndColumn()

    Dim last_row As Integer, last_col As Integer
    Dim ws_count As Integer, I As Integer
    Dim cur_sheet As Worksheet
    
    ws_count = ActiveWorkbook.Worksheets.Count

         ' Begin the loop.
    For I = 1 To ws_count

    Set cur_sheet = ActiveWorkbook.Worksheets(I)
    Debug.Print "Processing " & cur_sheet.Name

    
    ' last_row = cur_sheet.Cells(Rows.Count, 1).End(xlUp).Row
    ' lastRow = ActiveSheet.Cells.Find("*", searchorder:=xlByRows, searchdirection:=xlPrevious).Row
    last_row = cur_sheet.Cells.SpecialCells(xlLastCell).Row
    last_col = cur_sheet.Cells.Find("*", searchorder:=xlByColumns, searchdirection:=xlPrevious).Row
    
    Debug.Print last_row & ", " & last_col
    
    Next I

End Sub







Sub removeAllFormulas()

Dim ws_count As Integer, I As Integer
Dim cur_sheet As Worksheet
Dim last_row As Integer, last_col As Integer
Dim rng As Range

ws_count = ActiveWorkbook.Worksheets.Count

         ' Begin the loop.
For I = 1 To ws_count

Set cur_sheet = ActiveWorkbook.Worksheets(I)
Debug.Print "Processing " & cur_sheet.Name

If WorksheetFunction.CountA(ActiveSheet.UsedRange) = 0 Then
    Debug.Print "Sheet is empty "
    Next I
End If


last_row = cur_sheet.Cells.SpecialCells(xlLastCell).Row
last_col = cur_sheet.Cells.Find("*", searchorder:=xlByColumns, searchdirection:=xlPrevious).Row


Set rng = cur_sheet.Range(Cells(1, 1).Address, Cells(last_row, last_col).Address)

Debug.Print "Processing up to  " & rng.Address


' For Each c In cur_sheet.Range(Cells(1, 1), Cells(last_row, last_col)).Cells
For Each c In rng.Cells
    If IsError(c) Then
    Debug.Print "Error in " & c.Address
    c.Value = CStr(c.Value)
    End If
    
    If (c.Value <> c.Formula) Then
        Debug.Print c.Address & " "; c.Value & " "; c.Formula
        c.Formula = CStr(c.Value)
    End If
Next c

Next I
    


End Sub

